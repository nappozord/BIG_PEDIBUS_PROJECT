spring:
  datasource:
    url: jdbc:postgresql://127.0.0.1:5432/test2
    username: postgres
    password: admin
    driver-class-name: org.postgresql.Driver
    initialization-mode: always

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: create
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 876718038858-1bjo5a24878snrc2ut3od06du3k1q86g.apps.googleusercontent.com
            clientSecret: HlXlDqgoG6GX3su7A450l_TZ
            redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
          facebook:
            clientId: 333152743904734
            clientSecret: a5d54a096bea413a5e0cdab5a544d02c
            redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - public_profile
        provider:
          facebook:
            authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
            tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
            userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)

  mail:
    host: smtp.gmail.com
    port: 465
    protocol: smtps
    username: adventurepoop123@gmail.com
    password: 123qwe.123qwe...
    properties:
      mail:
        transport:
          protocol: smtps
        smtps:
          auth: true
          timeout: 8000

app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the frontend client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://nappozord.tk/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect

support:
  email: adventurepoop123@gmail.com
